# /projeto/docker-compose.yml
services:
  # Serviço principal da aplicação
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BUILD_DATE=${BUILD_DATE:-$(date -u +'%Y-%m-%dT%H:%M:%SZ')}
        - VCS_REF=${VCS_REF:-$(git rev-parse --short HEAD)}
        - VERSION=${VERSION:-1.0.0}
    container_name: local-ai-calculator
    ports:
      - "3080:80"
    volumes:
      - ./src/data:/usr/share/nginx/html/data:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "/usr/local/bin/docker-healthcheck.sh"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s
    networks:
      - local-ai-calculator-network
    environment:
      - NODE_ENV=production
      - TZ=America/Sao_Paulo
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Serviço para desenvolvimento
  dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: local-ai-calculator-dev
    ports:
      - "3005:3005"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    command: npm run dev -- --host 0.0.0.0 --port 3005
    networks:
      - local-ai-calculator-network

networks:
  local-ai-calculator-network:
    driver: bridge

volumes:
  data:
    driver: local

# Configurações para deploy em produção
x-production-defaults: &production-defaults
  deploy:
    resources:
      limits:
        cpus: '1'
        memory: 1G
      reservations:
        cpus: '0.5'
        memory: 512M
    restart_policy:
      condition: on-failure
      delay: 5s
      max_attempts: 3
      window: 120s
    update_config:
      parallelism: 1
      delay: 10s
      order: start-first